apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
spec:
  selector:
    matchLabels:
      app: queue
  replicas: 1
  template:  # Template for the POD
    metadata:
      labels:
        app: queue
    spec:
      containers:
        - name: queue
          image: rmohr/activemq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
spec:
  selector:
    matchLabels:
      app: position-simulator
  replicas: 1
  template:  # Template for the POD
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
        - name: position-simulator
          image: neerajjain/positionsimulator
          volumeMounts:
            - mountPath: /tmp/not-started
              name: not-started-volume
            - mountPath: /tmp/started
              name: started-volume
            - mountPath: /tmp/finished
              name: finished-volume
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
      volumes:
        - name: not-started-volume
          hostPath:
            path: /tmp/position_tracker/not-started
        - name: started-volume
          hostPath:
            path: /tmp/position_tracker/started
        - name: finished-volume
          hostPath:
            path: /tmp/position_tracker/finished
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  selector:
    matchLabels:
      app: database
  replicas: 1
  template:  # Template for the POD
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: mongo
          volumeMounts:
            - mountPath: /data/db
              name: mongo-persistent-storage
      volumes:
        - name: mongo-persistent-storage
          # Pointer to the configuration of How we want the mount to be implemented, So we are using Persistent Volume Claims.
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tracker
spec:
  selector:
    matchLabels:
      app: tracker
  replicas: 1
  template: # template for the POD
    metadata:
      labels:
        app: tracker
    spec:
      containers:
        - name: tracker
          image: neerajjain/vehicle-position-tracker
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka
spec:
  selector:
    matchLabels:
      app: eureka
  replicas: 1
  template:
    metadata:
      labels:
        app: eureka
    spec:
      containers:
        - name: eureka
          image: neerajjain/eureka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: neerajjain/position-tracker-api-gateway
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  selector:
    matchLabels:
      app: webapp
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: neerajjain/position-tracker-webapp
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trip-directions
spec:
  selector:
    matchLabels:
      app: trip-directions
  template:
    metadata:
      labels:
        app: trip-directions
    spec:
      containers:
        - name: trip-directions
          image: neerajjain/trip-directions
          env:
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: trip-directions-api-key
                  key: API_KEY


